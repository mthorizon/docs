import{d as t,j as e}from"./index-CzhKLbs3.js";const l={title:"IWallet Interface Implementations in SequenceEthereum SDK - EthWallet and WaaSToWalletAdapter",description:"Learn how to use SequenceEthereum's Wallet module including EthWallet and WaaSToWalletAdapter."};function n(i){const a={a:"a",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",span:"span",...t(),...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(a.header,{children:e.jsxs(a.h1,{id:"wallets",children:["Wallets",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#wallets",children:e.jsx(a.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsxs(a.p,{children:["In the context of SequenceEthereum, a ",e.jsx(a.code,{children:"Wallet"})," is defined by the ",e.jsx(a.code,{children:"IWallet"})," interface. There are currently 2 implementations of the ",e.jsx(a.code,{children:"IWallet"})," interface in this SDK."]}),`
`,e.jsxs(a.h2,{id:"1-eoawallet",children:["1. EOAWallet",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#1-eoawallet",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:[e.jsx(a.code,{children:"EOAWallet"})," is a standard ",e.jsx(a.a,{href:"https://ethereum.stackexchange.com/questions/5828/what-is-an-eoa-account",children:"EOA wallet"})," for EVM chains."]}),`
`,e.jsx(a.p,{children:"An EOAWallet is easily created:"}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(a.code,{children:[e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"IWallet eoaWallet = new EOAWallet(); // This will generate a cryptographically random private key"})}),`
`,e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"IWallet eoaWallet = new EOAWallet(privateKeyString); // Create a wallet using a previously generated private key"})})]})}),`
`,e.jsxs(a.h2,{id:"2-sequencewallettoeoawalletadapter",children:["2. SequenceWalletToEOAWalletAdapter",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#2-sequencewallettoeoawalletadapter",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:[e.jsx(a.code,{children:"SequenceWalletToEOAWalletAdapter"})," is an adapter that allows you to use a ",e.jsx(a.code,{children:"SequenceWallet"})," with the same ",e.jsx(a.code,{children:"IWallet"})," interface as an ",e.jsx(a.code,{children:"EOAWallet"})," so that it may be used interchangeably with EOA wallets throughout the rest of the SequenceEthereum library."]}),`
`,e.jsx(a.p,{children:"A SequenceWalletToEOAWalletAdapter is easily created once you have a SequenceWallet:"}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"IWallet sequenceAdapter = new SequenceWalletToEOAWalletAdapter(sequenceWallet);"})})})}),`
`,e.jsxs(a.h2,{id:"methods",children:["Methods",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#methods",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["The ",e.jsx(a.code,{children:"IWallet"})," interface provides a number of methods for you. The most important of which are:"]}),`
`,e.jsxs(a.h3,{id:"getaddress",children:["GetAddress",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#getaddress",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["Returns the ",e.jsx(a.code,{children:"Address"})," for the wallet"]}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"Address address = wallet.GetAddress();"})})})}),`
`,e.jsxs(a.h3,{id:"sendtransaction",children:["SendTransaction",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#sendtransaction",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["Signs the given ",e.jsx(a.code,{children:"EthTransaction"})," and submits it via the given client"]}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"string transactionHash = await wallet.SendTransaction(client, transaction);"})})})}),`
`,e.jsxs(a.h3,{id:"sendtransactionandwaitforreceipt",children:["SendTransactionAndWaitForReceipt",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#sendtransactionandwaitforreceipt",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["Signs the given ",e.jsx(a.code,{children:"EthTransaction"})," and submits it via the given client then waits for the ",e.jsx(a.code,{children:"TransactionReceipt"})]}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"TransactionReceipt receipt = await wallet.SendTransactionAndWaitForReceipt(client, transaction);"})})})}),`
`,e.jsxs(a.h3,{id:"sendtransactionbatch",children:["SendTransactionBatch",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#sendtransactionbatch",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["Signs the given ",e.jsx(a.code,{children:"EthTransaction[]"}),` and submits them via the given client.
If wallet is an `,e.jsx(a.code,{children:"EOAWallet"}),", the transactions will be submitted sequentially, each of which may pass or fail. If the wallet is a ",e.jsx(a.code,{children:"SequenceWalletToEOAWalletAdapter"}),`, the transactions will be batched together into a single transaction that is submitted all at once and either passes or fails as a whole.
Similarly, if a wallet is an `,e.jsx(a.code,{children:"EOAWallet"})," the ",e.jsx(a.code,{children:"string[]"})," (transaction hashes) you receive will be equal in length to the ",e.jsx(a.code,{children:"EthTransaction[]"})," you submitted. While, if the wallet is a ",e.jsx(a.code,{children:"SequenceWalletToEOAWalletAdapter"}),", you will only receive one transaction hash (",e.jsx(a.code,{children:"string[]"})," of length 1)"]}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"string[] transactionHashes = await wallet.SendTransactionBatch(client, transactions);"})})})}),`
`,e.jsxs(a.h3,{id:"sendtransactionbatchandwaitforreceipts",children:["SendTransactionBatchAndWaitForReceipts",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#sendtransactionbatchandwaitforreceipts",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(a.p,{children:["Signs the given ",e.jsx(a.code,{children:"EthTransaction[]"})," and submits them via the given client then waits for the ",e.jsx(a.code,{children:"TransactionReceipt[]"}),`.
If wallet is an `,e.jsx(a.code,{children:"EOAWallet"}),", the transactions will be submitted sequentially, each of which may pass or fail. If the wallet is a ",e.jsx(a.code,{children:"SequenceWalletToEOAWalletAdapter"}),`, the transactions will be batched together into a single transaction that is submitted all at once and either passes or fails as a whole.
Similarly, if a wallet is an `,e.jsx(a.code,{children:"EOAWallet"})," the ",e.jsx(a.code,{children:"TransactionReceipt[]"})," you receive will be equal in length to the ",e.jsx(a.code,{children:"EthTransaction[]"})," you submitted. While, if the wallet is a ",e.jsx(a.code,{children:"SequenceWalletToEOAWalletAdapter"}),", you will only receive one transaction receipt (",e.jsx(a.code,{children:"TransactionReceipt[]"})," of length 1)"]}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"TransactionReceipt[] receipts = await wallet.SendTransactionAndWaitForReceipt(client, transactions);"})})})}),`
`,e.jsxs(a.h3,{id:"signmessage",children:["SignMessage",e.jsx(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#signmessage",children:e.jsx(a.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(a.p,{children:"Given a message and an optional chain id, sign the message using the wallet. Omit the chain id from the signature if not provided"}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"string signedMessage = await wallet.SignMessage(message, chainId)"})})})}),`
`,e.jsxs(a.p,{children:["Note: the chainId is expected to be in hexadecimal format. If you are working with a ",e.jsx(a.code,{children:"Chain"})," object (recommended), you can use the ",e.jsx(a.code,{children:"AsString"})," method to get the hexadecimal format of the chain id"]}),`
`,e.jsx(a.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(a.code,{children:e.jsx(a.span,{className:"line",children:e.jsx(a.span,{children:"string signedMessage = await wallet.SignMessage(message, Chain.Polygon.AsString());"})})})})]})}function d(i={}){const{wrapper:a}={...t(),...i.components};return a?e.jsx(a,{...i,children:e.jsx(n,{...i})}):n(i)}export{d as default,l as frontmatter};
